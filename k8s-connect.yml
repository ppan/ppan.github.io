apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kafka-connect-claim0
  labels:
    app: kafka-connect-claim0
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-connect-service
  labels:
    app: kafka-connect
spec:
  type: NodePort
  ports:
  - name: "8083"
    port: 8083
    targetPort: 8083
  selector:
    app: kafka-connect
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-connect
  labels:
    app: kafka-connect
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-connect
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: kafka-connect
    spec:
      containers:
      - args:
        - bash
        - -c
        - |
          echo "Installing Connector"
          confluent-hub install --no-prompt debezium/debezium-connector-mysql:1.0.0
          confluent-hub install --no-prompt confluentinc/kafka-connect-elasticsearch:5.5.0
          confluent-hub install --no-prompt neo4j/kafka-connect-neo4j:1.0.7
          #
          echo "Launching Kafka Connect worker"
          /etc/confluent/docker/run &
          #
          sleep infinity
        env:
        - name: CONNECT_BOOTSTRAP_SERVERS
          #value: kafka:29092
          value: kafkadev-kafka-bootstrap:9092
        - name: CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR
          value: "1"
        - name: CONNECT_CONFIG_STORAGE_TOPIC
          value: _connect-configs
        - name: CONNECT_GROUP_ID
          value: kafka-connect
        - name: CONNECT_INTERNAL_KEY_CONVERTER
          value: org.apache.kafka.connect.json.JsonConverter
        - name: CONNECT_INTERNAL_VALUE_CONVERTER
          value: org.apache.kafka.connect.json.JsonConverter
        - name: CONNECT_KEY_CONVERTER
          value: org.apache.kafka.connect.storage.StringConverter
        - name: CONNECT_LOG4J_APPENDER_STDOUT_LAYOUT_CONVERSIONPATTERN
          value: '[%d] %p %X{connector.context}%m (%c:%L)%n'
        - name: CONNECT_LOG4J_LOGGERS
          value: org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR
        - name: CONNECT_LOG4J_ROOT_LOGLEVEL
          value: INFO
        - name: CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR
          value: "1"
        - name: CONNECT_OFFSET_STORAGE_TOPIC
          value: _connect-offsets
        - name: CONNECT_PLUGIN_PATH
          value: /usr/share/java,/usr/share/confluent-hub-components,/data/connect-jars
        - name: CONNECT_REST_ADVERTISED_HOST_NAME
          value: kafka-connect
        - name: CONNECT_REST_PORT
          value: "8083"
        - name: CONNECT_STATUS_STORAGE_REPLICATION_FACTOR
          value: "1"
        - name: CONNECT_STATUS_STORAGE_TOPIC
          value: _connect-status
        - name: CONNECT_VALUE_CONVERTER
          value: io.confluent.connect.avro.AvroConverter
        - name: CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL
          value: http://schema-registry-service:8081
        image: confluentinc/cp-kafka-connect-base:5.4.1
        imagePullPolicy: ""
        name: kafka-connect
        ports:
        - containerPort: 8083
        resources: {}
        volumeMounts:
        - mountPath: /data
          name: kafka-connect-claim0
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: kafka-connect-claim0
        persistentVolumeClaim:
          claimName: kafka-connect-claim0
